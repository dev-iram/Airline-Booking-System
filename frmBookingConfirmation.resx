<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="txtDepartureLeg1.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnHelp.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAyCAYAAAAayliMAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADrwAAA68AZW8ckkAAASOSURBVGhD1ZnHS/VMFMbtXVCx4MKFDctCsYMdRBHEAlbs
        orhQQewiiAux60JFsKOIWP7J+c7Jx+hk5rk3N7l38br4cZOT5zxnkptMScKEEH8aGPxLwOBfAga9cHp6
        Krq7u0VeXp6Ij48n5zADjvPxnp4ewXrdwwswGCj39/eivr7eaKgbGhoaxMPDA9nhGk7AoBN3d3eioKDA
        aEwwsB9fEL2WEzDoj+bmZqN4KGlpaaEyuDYCBhHPz88iISHBKIjgez0nJ0eUlpaKkpISkZ2dDXW+SExM
        FC8vL1QWt0UFBnV2d3eNIjq5ublidXWV5NiDuby8FOXl5TAfsbe3R2nYSwKDKhsbG4axSlZWlri+viYp
        zkccHBxAL8TW1halYB8GBiVHR0eGoc7Q0BBJcb4/uCNAfgh/XS4MSnQjREpKCklxvhNjY2PQE6HnSmCQ
        ycjIMEx8cXNzQyn/5319fYmlpSXR1dVl4fRcREdHQ08dvlX1XMYIMKOjo4aBPyorK8Xt7a01yqLjkZGR
        gk9Mr8PU1NTAHMTk5CSl2PNtOz9BLTEUcLeq12Gmpqag3hd6vm2H6ezsNJJChV6LWVhYgFpf8G2p5tvM
        mPDwcCMpFPBtpNdihoeHod4XERERlPabbzNbX183EkIFj8hqLQmP1kjvD3VssJkVFRUZ4lBxfn5OJX5r
        Sbz843zSMt9mpgtDha+r72YcUOGTlh4/Zo+Pj4YwFHA/L2voBPO8ycnej9ny8rIhCgV8YWQNFf5XkD5Q
        1tbWyIY2pWFfX58hCpaVlRWriM7ExATUu2FgYICsaFOaNjU1GaJgqK6utgroHB8fQ71bWltbyY42pXFV
        VZUh8or6kOnoWq/U1taSHW1KY75iSOiF3t5ey1zHzQTRibq6OrKkTWnOa1Ek9IL0VFlcXIRar7S1tZEt
        bcoCg4ODhsgLaWlplrFOcnIy1HtlZGSEbGlTFtjc3DREXuDpsfRU0XXBsrOzQ7a0KQu8v78bIi+0t7db
        xioXFxdQGwyfn59WHVuhqKgoQ+iWxsZGy1jl7OwMar2iju62QryyQgluQPOep6cnqPWKepvaCu3v7xti
        t8TExIj+/n5r+ceTNV5xlZWVQa1XDg8PqbngBBhuAEr6V4iLi6Nm/rbX1nhmfHzcSPICr5x8vWYPBv5H
        1fbaGi8J9FUHgqcR/CpS9SssLIRat/Ddofoyth1JMEvLk5MTsjA9U1NTod4N29vbZGX3te2oFBcXGwZO
        ZGZmUir2m52dhTmBoi4jVYyASmxsrGHkj4qKCkrDXm5e6OroD64KDEo+Pj4MM3/wdwDdQzI/Pw9zAuH7
        +5sssC8MqvArQ2Tqi6urK0ozfdLT06HeCafPTjCo8/r6KgKdZnAPxq/l1XwvzxP7vL292XwQMOgLXy9v
        EdzlJSUlwWNO5OfnUzncBh0Y9EewvYkTc3NzVAbXRsBgIPC0GTXAKx0dHWSLa/kDBt0wPT1t9f+oUU7w
        R4uZmRmywd6BAINe4Q+C/M/wR2v+9MTjCD/8/MsjMcf5OK/+9FyvwOBfAgb/EjD4dxBh/wEuLsoxeQfR
        HgAAAABJRU5ErkJggg==
</value>
  </data>
</root>